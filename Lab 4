#zad 1
import math

def pole_kola(r):
    return math.pi * r**2
#zad 2
def pole_trapezu(a, b, h):
    return (a + b) * h / 2
#zad 3
def sprawdz_dodatnia():
    x = float(input("Podaj liczbę: "))
    if x > 0:
        print("Liczba jest dodatnia.")
    else:
        print("Liczba nie jest dodatnia.")
sprawdz_dodatnia()
#zad 4
def oblicz_bmi(waga, wzrost):
    bmi = waga / (wzrost ** 2)
    if bmi < 18.5:
        zakres = "niedowaga"
    elif 18.5 <= bmi < 24.9:
        zakres = "waga prawidłowa"
    elif 25 <= bmi < 29.9:
        zakres = "nadwaga"
    else:
        zakres = "otyłość"
    return bmi, zakres

waga = float(input("Podaj wagę w kilogramach: "))
wzrost = float(input("Podaj wzrost w metrach: "))

bmi, zakres = oblicz_bmi(waga, wzrost)

print(f"Twoje BMI to: {bmi:.2f}, co oznacza: {zakres}.")
#zad 5
def srednia(lista):
    return sum(lista) / len(lista) if lista else 0

lista_liczb = [3, 4, 5, 6]
print(srednia(lista_liczb))  # Wyświetli: 4.5
#zad 6
def wypisz_imie_wiek(imie, wiek=20):
    """
    Funkcja wypisuje imię i wiek osoby.
    Parametr 'wiek' ma wartość domyślną 20.
    """
    print(f"Imię: {imie}, Wiek: {wiek}")

print(wypisz_imie_wiek.__doc__)

wypisz_imie_wiek("Jan")
wypisz_imie_wiek("Anna", 25)
#zad 7

import math

def funkcja():
    bc = 12
    ac = 10

    if ac > 0 and bc > 0:
        bc_dzielone_przez_2 = bc/2
        if ac > bc_dzielone_przez_2:
            h = math.sqrt(ac**2 - bc_dzielone_przez_2**2)
            P = 0.5 * bc * h
            print(f"pole: {P}")
        else:
            print("dane nie tworza trojkata prostokatnego")
    else:
        print("podaj liczby wieksze od 0")
funkcja()

zad 8

def potega_rekurencyjna(a, n):
    if n == 0:
        return 1
    elif n < 0:
        return 1 / potega_rekurencyjna(a, -n)
    else:
        return a * potega_rekurencyjna(a, n - 1)


zad 9

def fibonacci(n):
    if n <= 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)

zad 10

def hanoi(n, source, target, auxiliary):
    if n == 1:
        print(f"Przenies krazek z {source} na {target}")
    else:
        hanoi(n - 1, source, auxiliary, target)
        print(f"Przenieś krążek z {source} na {target}")
        hanoi(n - 1, auxiliary, target, source)

zad 11 

def odwroc_string(s):
    if len(s) == 0:
        return s
    else:
        return s[-1] + odwroc_string(s[:-1])
